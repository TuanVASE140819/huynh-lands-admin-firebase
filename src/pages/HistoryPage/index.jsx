import React, { useState, useEffect } from 'react'
import { Modal, Input, Button, Tabs } from 'antd'
import { fetchHistory, updateHistory } from '../../api/historyApi'
import { fetchMission, updateMission } from '../../api/missionApi'
import { fetchVision, updateVision } from '../../api/visionApi'

const initialBlocks = {
  vi: [
    {
      key: 'history',
      title: 'L·ªãch s·ª≠ h√¨nh th√†nh',
      content: `Th√πy Anh Land ƒë∆∞·ª£c th√†nh l·∫≠p v√†o nƒÉm 2008 v·ªõi s·ª© m·ªánh mang ƒë·∫øn nh·ªØng gi·∫£i ph√°p b·∫•t ƒë·ªông s·∫£n ∆∞u vi·ªát cho kh√°ch h√†ng. Trong nh·ªØng nƒÉm ƒë·∫ßu ch·ªâ c√≥ m·ªôt tr·ª• s·ªü t·∫°i S√†i G√≤n, ch√∫ng t√¥i ƒë√£ kh√¥ng ng·ª´ng ph√°t tri·ªÉn th∆∞∆°ng hi·ªáu uy t√≠n h√†ng ƒë·∫ßu tr√™n th·ªã tr∆∞·ªùng v·ªõi ƒë·ªôi ng≈© gi√†u kinh nghi·ªám.\n\nQu√° tr√¨nh 15 nƒÉm ph√°t tri·ªÉn, ch√∫ng t√¥i ƒë√£ ƒë·ªìng h√†nh c√πng h√†ng ngh√¨n kh√°ch h√†ng trong v√† ngo√†i n∆∞·ªõc, cung c·∫•p c√°c s·∫£n ph·∫©m ch·∫•t l∆∞·ª£ng. ƒê·∫øn nay, lƒ©nh v·ª±c ho·∫°t ƒë·ªông ƒë√£ m·ªü r·ªông kh·∫Øp c√°c t·ªânh th√†nh ph√≠a Nam v√† c·∫£ n∆∞·ªõc, ƒë·∫∑c bi·ªát l√† c√°c d·ª± √°n l·ªõn t·∫°i TP.HCM v√† c√°c t·ªânh l√¢n c·∫≠n.\n\nHi·ªán t·∫°i, ch√∫ng t√¥i l√† m·ªôt trong nh·ªØng c√¥ng ty b·∫•t ƒë·ªông s·∫£n uy t√≠n t·∫°i TP.HCM v√† c√°c t·ªânh l√¢n c·∫≠n, v·ªõi ƒë·ªôi ng≈© h∆°n 100 chuy√™n vi√™n v√† quy tr√¨nh kh√©p k√≠n hi·ªán ƒë·∫°i.`,
    },
    {
      key: 'mission',
      title: 'S·ª© m·ªánh',
      content:
        'Mang ƒë·∫øn gi·∫£i ph√°p b·∫•t ƒë·ªông s·∫£n t·ªëi ∆∞u, ƒë√°p ·ª©ng nhu c·∫ßu kh√°ch h√†ng t√¨m ki·∫øm n∆°i an c∆∞ v√† ph√°t tri·ªÉn s·ª± nghi·ªáp b·ªÅn v·ªØng.',
    },
    {
      key: 'vision',
      title: 'T·∫ßm nh√¨n',
      content:
        'Tr·ªü th√†nh ƒë∆°n v·ªã d·∫´n ƒë·∫ßu th·ªã tr∆∞·ªùng, ƒë∆∞·ª£c kh√°ch h√†ng v√† ƒë·ªëi t√°c tin t∆∞·ªüng l·ª±a ch·ªçn, ti√™n phong ƒë·ªïi m·ªõi trong ng√†nh b·∫•t ƒë·ªông s·∫£n.',
    },
  ],
  en: [
    {
      key: 'history',
      title: 'History',
      content:
        'Thuy Anh Land was founded in 2008 with the mission to provide optimal real estate solutions for customers. In the early years, with only one office in Saigon, we have continuously developed a leading reputable brand in the market with a team of experienced professionals.\n\nAfter 15 years of development, we have accompanied thousands of customers at home and abroad, providing quality products. Currently, our operational fields have expanded throughout the southern provinces and the whole country, especially large projects in Ho Chi Minh City and neighboring provinces.\n\nAt present, we are one of the reputable real estate companies in Ho Chi Minh City and neighboring provinces, with a team of more than 100 professionals and a modern closed process.',
    },
    {
      key: 'mission',
      title: 'Mission',
      content:
        'Providing optimal real estate solutions, meeting the needs of customers seeking a place to live and sustainable career development.',
    },
    {
      key: 'vision',
      title: 'Vision',
      content:
        'To become a leading company in the market, trusted by customers and partners, pioneering innovation in the real estate industry.',
    },
  ],
  ko: [
    {
      key: 'history',
      title: 'ÏÑ§Î¶Ω Ïó≠ÏÇ¨',
      content:
        'Thuy Anh LandÎäî 2008ÎÖÑÏóê ÏÑ§Î¶ΩÎêòÏñ¥ Í≥†Í∞ùÏóêÍ≤å ÏµúÏ†ÅÏùò Î∂ÄÎèôÏÇ∞ ÏÜîÎ£®ÏÖòÏùÑ Ï†úÍ≥µÌïòÎäî Í≤ÉÏùÑ ÏÇ¨Î™ÖÏúºÎ°ú ÌïòÍ≥† ÏûàÏäµÎãàÎã§. Ï¥àÍ∏∞ Î™á ÎÖÑ ÎèôÏïà ÏÇ¨Ïù¥Í≥µÏóê ÌïòÎÇòÏùò ÏÇ¨Î¨¥ÏÜåÎßåÏúºÎ°ú ÏãúÏû•ÏóêÏÑú Í≤ΩÌóòÏù¥ ÌíçÎ∂ÄÌïú Ï†ÑÎ¨∏Í∞Ä ÌåÄÍ≥º Ìï®Íªò ÏÑ†ÎèÑÏ†ÅÏù∏ ÌèâÌåê Î∏åÎûúÎìúÎ°ú ÏßÄÏÜçÏ†ÅÏúºÎ°ú Î∞úÏ†ÑÌï¥ ÏôîÏäµÎãàÎã§.\n\n15ÎÖÑÏùò Í∞úÎ∞ú Í≥ºÏ†ïÏóêÏÑú Ïö∞Î¶¨Îäî Íµ≠ÎÇ¥Ïô∏ ÏàòÏ≤ú Î™ÖÏùò Í≥†Í∞ùÍ≥º ÎèôÌñâÌïòÎ©∞ ÏñëÏßàÏùò Ï†úÌíàÏùÑ Ï†úÍ≥µÌï¥ ÏôîÏäµÎãàÎã§. ÌòÑÏû¨ Ïö∞Î¶¨Ïùò ÏÇ¨ÏóÖ Î∂ÑÏïºÎäî ÎÇ®Î∂Ä ÏßÄÎ∞©Í≥º Ï†ÑÍµ≠ÏúºÎ°ú ÌôïÎåÄÎêòÏóàÏúºÎ©∞, ÌäπÌûà Ìò∏ÏπòÎØºÏãúÏôÄ Ïù∏Í∑º ÏßÄÎ∞©Ïùò ÎåÄÍ∑úÎ™® ÌîÑÎ°úÏ†ùÌä∏ÏóêÏÑú ÎëêÎìúÎü¨ÏßëÎãàÎã§.\n\nÌòÑÏû¨ Ïö∞Î¶¨Îäî Ìò∏ÏπòÎØºÏãúÏôÄ Ïù∏Í∑º ÏßÄÎ∞©ÏóêÏÑú Ïã†Î¢∞Ìï† Ïàò ÏûàÎäî Î∂ÄÎèôÏÇ∞ ÌöåÏÇ¨ Ï§ë ÌïòÎÇòÎ°ú, 100Î™Ö Ïù¥ÏÉÅÏùò Ï†ÑÎ¨∏Í∞Ä ÌåÄÍ≥º ÌòÑÎåÄÏ†ÅÏù∏ ÌèêÏáÑ ÌîÑÎ°úÏÑ∏Ïä§Î•º Í∞ñÏ∂îÍ≥† ÏûàÏäµÎãàÎã§.',
    },
    {
      key: 'mission',
      title: 'ÏÇ¨Î™Ö',
      content:
        'Í≥†Í∞ùÏùò Ï£ºÍ±∞ Î∞è ÏßÄÏÜç Í∞ÄÎä•Ìïú Í≤ΩÎ†• Í∞úÎ∞úÏùÑ ÏúÑÌïú ÏµúÏ†ÅÏùò Î∂ÄÎèôÏÇ∞ ÏÜîÎ£®ÏÖòÏùÑ Ï†úÍ≥µÌï©ÎãàÎã§.',
    },
    {
      key: 'vision',
      title: 'ÎπÑÏ†Ñ',
      content:
        'ÏãúÏû• ÏÑ†ÎèÑ Í∏∞ÏóÖÏù¥ ÎêòÏñ¥ Í≥†Í∞ùÍ≥º ÌååÌä∏ÎÑàÍ∞Ä Ïã†Î¢∞ÌïòÎäî ÌòÅÏã†Ï†ÅÏù∏ Î∂ÄÎèôÏÇ∞ Í∏∞ÏóÖÏù¥ ÎêòÎäî Í≤É.',
    },
  ],
}

const AboutPage = () => {
  const [lang, setLang] = useState('vi')
  const [blocks, setBlocks] = useState(initialBlocks)
  const [modal, setModal] = useState({ open: false, key: '', value: '' })
  const [loading, setLoading] = useState(false)

  useEffect(() => {
    setLoading(true)
    Promise.all([fetchHistory(lang), fetchMission(lang), fetchVision(lang)])
      .then(([history, mission, vision]) => {
        setBlocks((prev) => ({
          ...prev,
          [lang]: [
            {
              key: 'history',
              title: history.title,
              content: history.content,
            },
            {
              key: 'mission',
              title: mission.title,
              content: mission.content,
            },
            {
              key: 'vision',
              title: vision.title,
              content: vision.content,
            },
            ...prev[lang].slice(3),
          ],
        }))
      })
      .catch(() => {})
      .finally(() => setLoading(false))
  }, [lang])

  const handleOpenModal = (block) => {
    setModal({
      open: true,
      key: block.key,
      value: block.content,
      title: block.title,
    })
  }
  const handleOk = async () => {
    if (modal.key === 'history') {
      try {
        setLoading(true)
        await updateHistory(lang, {
          title: modal.title,
          content: modal.value,
        })
        setBlocks((prev) => ({
          ...prev,
          [lang]: prev[lang].map((b) =>
            b.key === modal.key
              ? { ...b, title: modal.title, content: modal.value }
              : b,
          ),
        }))
      } catch (e) {
        // handle error if needed
      } finally {
        setLoading(false)
        setModal({ open: false, key: '', value: '', title: '' })
      }
      return
    }
    if (modal.key === 'mission') {
      try {
        setLoading(true)
        await updateMission(lang, {
          title: modal.title,
          content: modal.value,
        })
        setBlocks((prev) => ({
          ...prev,
          [lang]: prev[lang].map((b) =>
            b.key === modal.key
              ? { ...b, title: modal.title, content: modal.value }
              : b,
          ),
        }))
      } catch (e) {
        // handle error if needed
      } finally {
        setLoading(false)
        setModal({ open: false, key: '', value: '', title: '' })
      }
      return
    }
    if (modal.key === 'vision') {
      try {
        setLoading(true)
        await updateVision(lang, {
          title: modal.title,
          content: modal.value,
        })
        setBlocks((prev) => ({
          ...prev,
          [lang]: prev[lang].map((b) =>
            b.key === modal.key
              ? { ...b, title: modal.title, content: modal.value }
              : b,
          ),
        }))
      } catch (e) {
        // handle error if needed
      } finally {
        setLoading(false)
        setModal({ open: false, key: '', value: '', title: '' })
      }
      return
    }
    setBlocks({
      ...blocks,
      [lang]: blocks[lang].map((b) =>
        b.key === modal.key ? { ...b, content: modal.value } : b,
      ),
    })
    setModal({ open: false, key: '', value: '', title: '' })
  }
  const handleCancel = () =>
    setModal({ open: false, key: '', value: '', title: '' })

  return (
    <div className='p-6 max-w-6xl mx-auto'>
      <Tabs activeKey={lang} onChange={setLang} className='mb-6'>
        <Tabs.TabPane tab='Ti·∫øng Vi·ªát' key='vi' />
        <Tabs.TabPane tab='English' key='en' />
        <Tabs.TabPane tab='ÌïúÍµ≠Ïñ¥' key='ko' />
      </Tabs>
      <div className='flex flex-col md:flex-row gap-8 mb-8'>
        <div
          className='flex-1 cursor-pointer'
          onClick={() => handleOpenModal(blocks[lang][0])}
        >
          <h2 className='text-2xl font-bold mb-2'>{blocks[lang][0].title}</h2>
          <p className='mb-2 whitespace-pre-line'>
            {loading && lang === 'vi' ? 'ƒêang t·∫£i...' : blocks[lang][0].content}
          </p>
        </div>
        <div className='flex-1 flex items-center justify-center'>
          <div className='w-64 h-64 bg-gray-100 rounded-lg flex items-center justify-center'>
            <span className='text-gray-400 text-4xl'>·∫¢nh</span>
          </div>
        </div>
      </div>
      <div className='grid grid-cols-1 md:grid-cols-2 gap-6 mb-8'>
        {blocks[lang].slice(1).map((block) => (
          <div
            key={block.key}
            className='bg-white rounded-lg shadow p-6 flex flex-col items-center cursor-pointer'
            onClick={() => handleOpenModal(block)}
          >
            <div className='text-blue-500 text-3xl mb-2'>üéØ</div>
            <h3 className='font-semibold mb-1'>{block.title}</h3>
            <p className='text-center text-gray-600 text-sm'>{block.content}</p>
          </div>
        ))}
      </div>
      <div className='mb-8'>
        <h3 className='text-xl font-bold mb-4 text-center'>
          Th√†nh t·ª±u ƒë·∫°t ƒë∆∞·ª£c
        </h3>
        <div className='grid grid-cols-2 md:grid-cols-4 gap-6'>
          <div className='flex flex-col items-center'>
            <span className='text-blue-500 text-3xl mb-1'>5000+</span>
            <span className='text-gray-600 text-sm'>Kh√°ch h√†ng tin t∆∞·ªüng</span>
          </div>
          <div className='flex flex-col items-center'>
            <span className='text-blue-500 text-3xl mb-1'>1000+</span>
            <span className='text-gray-600 text-sm'>Giao d·ªãch th√†nh c√¥ng</span>
          </div>
          <div className='flex flex-col items-center'>
            <span className='text-blue-500 text-3xl mb-1'>15+</span>
            <span className='text-gray-600 text-sm'>NƒÉm kinh nghi·ªám</span>
          </div>
          <div className='flex flex-col items-center'>
            <span className='text-blue-500 text-3xl mb-1'>98%</span>
            <span className='text-gray-600 text-sm'>Kh√°ch h√†ng h√†i l√≤ng</span>
          </div>
        </div>
      </div>
      <div className='mb-8'>
        <h3 className='text-xl font-bold mb-4 text-center'>ƒê·ªôi ng≈© l√£nh ƒë·∫°o</h3>
        <div className='grid grid-cols-2 md:grid-cols-4 gap-6'>
          <div className='flex flex-col items-center'>
            <div className='w-20 h-20 bg-gray-200 rounded-full mb-2 flex items-center justify-center'>
              <span className='text-gray-400 text-2xl'>·∫¢nh</span>
            </div>
            <span className='font-semibold'>Nguy·ªÖn Th√πy Anh</span>
            <span className='text-gray-500 text-xs'>Gi√°m ƒë·ªëc</span>
          </div>
          <div className='flex flex-col items-center'>
            <div className='w-20 h-20 bg-gray-200 rounded-full mb-2 flex items-center justify-center'>
              <span className='text-gray-400 text-2xl'>·∫¢nh</span>
            </div>
            <span className='font-semibold'>Tr·∫ßn VƒÉn B</span>
            <span className='text-gray-500 text-xs'>
              Ph√≥ gi√°m ƒë·ªëc kinh doanh
            </span>
          </div>
          <div className='flex flex-col items-center'>
            <div className='w-20 h-20 bg-gray-200 rounded-full mb-2 flex items-center justify-center'>
              <span className='text-gray-400 text-2xl'>·∫¢nh</span>
            </div>
            <span className='font-semibold'>L√™ Th·ªã C</span>
            <span className='text-gray-500 text-xs'>
              Tr∆∞·ªüng ph√≤ng kinh doanh
            </span>
          </div>
          <div className='flex flex-col items-center'>
            <div className='w-20 h-20 bg-gray-200 rounded-full mb-2 flex items-center justify-center'>
              <span className='text-gray-400 text-2xl'>·∫¢nh</span>
            </div>
            <span className='font-semibold'>Ph·∫°m VƒÉn D</span>
            <span className='text-gray-500 text-xs'>Chuy√™n vi√™n ph√°p l√Ω</span>
          </div>
        </div>
      </div>
      <div className='mb-8'>
        <h3 className='text-xl font-bold mb-4 text-center'>
          T·∫°i sao ch·ªçn Th√πy Anh Land?
        </h3>
        <div className='bg-blue-50 rounded-lg p-4 text-center font-semibold text-blue-700 mb-4'>
          Kh√¥ng lo b·ªã c·∫°nh tranh nh·ªù c√°c l·ª£i th·∫ø v∆∞·ª£t tr·ªôi
        </div>
        <div className='grid grid-cols-1 md:grid-cols-2 gap-6'>
          <ul className='text-left text-gray-600 list-disc list-inside'>
            <li>M·∫°ng l∆∞·ªõi r·ªông kh·∫Øp</li>
            <li>ƒê·ªôi ng≈© chuy√™n vi√™n gi√†u kinh nghi·ªám</li>
            <li>Quy tr√¨nh d·ªãch v·ª• chuy√™n nghi·ªáp, kh√©p k√≠n</li>
            <li>Ch√≠nh s√°ch h·∫≠u m√£i h·∫•p d·∫´n</li>
          </ul>
          <ul className='text-left text-gray-600 list-disc list-inside'>
            <li>Gi√° c·∫£ c·∫°nh tranh, minh b·∫°ch</li>
            <li>Cam k·∫øt ƒë·ªìng h√†nh v√† h·ªó tr·ª£ kh√°ch h√†ng l√¢u d√†i</li>
            <li>ƒê·ªëi t√°c uy t√≠n, s·∫£n ph·∫©m ƒëa d·∫°ng</li>
            <li>Kh√°ch h√†ng h√†i l√≤ng l√† ∆∞u ti√™n s·ªë 1</li>
          </ul>
        </div>
      </div>
      <Modal
        title={
          <Input
            value={modal.title}
            onChange={(e) => setModal((m) => ({ ...m, title: e.target.value }))}
            className='mb-2'
          />
        }
        open={modal.open}
        onOk={handleOk}
        onCancel={handleCancel}
      >
        <Input.TextArea
          rows={6}
          value={modal.value}
          onChange={(e) => setModal((m) => ({ ...m, value: e.target.value }))}
        />
      </Modal>
    </div>
  )
}

export default AboutPage
